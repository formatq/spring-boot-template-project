/*
 * This file is generated by jOOQ.
 */
package ru.formatq.spring.db.jooq.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.formatq.spring.db.jooq.tables.ExampleTable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExampleTableRecord extends UpdatableRecordImpl<ExampleTableRecord> implements Record4<Long, UUID, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>EXAMPLE_TABLE.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>EXAMPLE_TABLE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>EXAMPLE_TABLE.SOME_UUID</code>.
     */
    public void setSomeUuid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>EXAMPLE_TABLE.SOME_UUID</code>.
     */
    public UUID getSomeUuid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>EXAMPLE_TABLE.NAME</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>EXAMPLE_TABLE.NAME</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>EXAMPLE_TABLE.COUNT</code>.
     */
    public void setCount(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>EXAMPLE_TABLE.COUNT</code>.
     */
    public Long getCount() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, UUID, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, UUID, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ExampleTable.EXAMPLE_TABLE.ID;
    }

    @Override
    public Field<UUID> field2() {
        return ExampleTable.EXAMPLE_TABLE.SOME_UUID;
    }

    @Override
    public Field<String> field3() {
        return ExampleTable.EXAMPLE_TABLE.NAME;
    }

    @Override
    public Field<Long> field4() {
        return ExampleTable.EXAMPLE_TABLE.COUNT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getSomeUuid();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Long component4() {
        return getCount();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getSomeUuid();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Long value4() {
        return getCount();
    }

    @Override
    public ExampleTableRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ExampleTableRecord value2(UUID value) {
        setSomeUuid(value);
        return this;
    }

    @Override
    public ExampleTableRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ExampleTableRecord value4(Long value) {
        setCount(value);
        return this;
    }

    @Override
    public ExampleTableRecord values(Long value1, UUID value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExampleTableRecord
     */
    public ExampleTableRecord() {
        super(ExampleTable.EXAMPLE_TABLE);
    }

    /**
     * Create a detached, initialised ExampleTableRecord
     */
    public ExampleTableRecord(Long id, UUID someUuid, String name, Long count) {
        super(ExampleTable.EXAMPLE_TABLE);

        setId(id);
        setSomeUuid(someUuid);
        setName(name);
        setCount(count);
    }
}
